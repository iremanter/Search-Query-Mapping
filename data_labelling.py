# -*- coding: utf-8 -*-
"""delivery_hero_case.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bgu7eScVj4D0ZUZx5rYZW1YebblU_x3p
"""

import pandas as pd

# lists
original_data = pd.read_excel("delivery_hero_data.xlsx")
not_item_data = pd.read_excel("Not_Item_List.xlsx")
determiner_data = pd.read_excel("Determiner_List.xlsx")
brand_data = pd.read_excel("Brand_List.xlsx")
ingredient_data = pd.read_excel("Ingredient_List.xlsx")

# normalize entries to make them lowercase and remove blanks
original_data['entry_normalized'] = original_data['entry_name'].str.lower().str.strip()
not_item_set = set(not_item_data['not_item_name'].str.lower().str.strip())
brand_set = set(brand_data['brand_name'].str.lower().str.strip())
determiner_set = set(determiner_data['determiner_name'].str.lower().str.strip())
ingredient_set = set(ingredient_data['ingredient_name'].str.lower().str.strip())

# create a new list to store true/false based on "not item"
is_item_list = []

# check original data entries whether they are in the "not item list" (exact match)
for entry_name in original_data['entry_normalized']:
    if entry_name in not_item_set:
        is_item_list.append(False)  # if exact match exists, return False (is_item should be true)
    else:
        is_item_list.append(True)  # if no exact match, return True

# adding "is_item" column
original_data['is_item'] = is_item_list

# create a new list to store true/false based on "brand"
is_brand_list = []

# check original data entries whether they are in the "brand list"
for entry_name in original_data['entry_normalized']:
    is_brand = False
    for brand in brand_set:
        if brand in entry_name:  # check whether the original entry contains the brand name
            is_brand = True
            break  # if a match is found, break
    is_brand_list.append(is_brand)

# adding "is_brand" column
original_data['is_brand'] = is_brand_list

# create a new list to store true/false based on "ingredient"
is_ingredient_list = []

# check original data entries whether they are in the "ingredient list" (exact match, there can be sth. like chocolate cake)
for entry_name in original_data['entry_normalized']:
    if entry_name in ingredient_set:
        is_ingredient_list.append(True)  # if exact match exists, return True
    else:
        is_ingredient_list.append(False)  # otherwise return False

# adding "is_ingredient" column
original_data['is_ingredient'] = is_ingredient_list

# create a new list to store true/false based on "determiner"
is_determiner_list = []

# create a new list to store the determiners found in the entry
determiners_found_list = []

# check original data entries whether they contain any determiner from the "determiner list"
for entry_name in original_data['entry_normalized']:
    determiners_found = []
    for determiner in determiner_set:
        if determiner in entry_name:  # check if the determiner is in the entry
            determiners_found.append(determiner)  # add the determiner to the list
    # Return True if at least one determiner is found, otherwise return False
    is_determiner_list.append(len(determiners_found) > 0)

    determiners_found_list.append(", ".join(determiners_found))  # join determiners into a single string

# adding "is_determiner" column
original_data['is_determiner'] = is_determiner_list

# adding "determiners_found" column
original_data['determiners_found'] = determiners_found_list

# output
print(original_data[['entry_name', 'is_item', 'is_brand', 'is_ingredient', 'is_determiner', 'determiners_found']])

# save
original_data.to_excel("updated_original_data.xlsx", index=False)

import pandas as pd

# lists
original_data = pd.read_excel("delivery_hero_data.xlsx")
not_item_data = pd.read_excel("Not_Item_List.xlsx")
determiner_data = pd.read_excel("Determiner_List.xlsx")
brand_data = pd.read_excel("Brand_List.xlsx")
ingredient_data = pd.read_excel("Ingredient_List.xlsx")

# normalize all entries (make them lowercase and remove spaces)
original_data['entry_normalized'] = original_data['entry_name'].str.lower().str.strip()
not_item_set = set(not_item_data['not_item_name'].str.lower().str.strip())
brand_set = set(brand_data['brand_name'].str.lower().str.strip())
determiner_set = set(determiner_data['determiner_name'].str.lower().str.strip())
ingredient_list = ingredient_data['ingredient_name'].str.lower().str.strip().tolist()

# "Not Item" - exact match
is_item_list = []

for entry_name in original_data['entry_normalized']:
    if entry_name in not_item_set:
        is_item_list.append(False)
    else:
        is_item_list.append(True)

original_data['is_item'] = is_item_list

# "Brand" - contains match
is_brand_list = []

for entry_name in original_data['entry_normalized']:
    is_brand = any(brand in entry_name for brand in brand_set)
    is_brand_list.append(is_brand)

original_data['is_brand'] = is_brand_list

# "Ingredient" - contains match
is_ingredient_list = []

for entry_name in original_data['entry_normalized']:
    is_ingredient = any(ingredient in entry_name for ingredient in ingredient_list)
    is_ingredient_list.append(is_ingredient)

original_data['is_ingredient'] = is_ingredient_list

# "Determiner" - contains match
is_determiner_list = []
determiners_found_list = []

for entry_name in original_data['entry_normalized']:
    determiners_found = [determiner for determiner in determiner_set if determiner in entry_name]
    is_determiner_list.append(len(determiners_found) > 0)
    determiners_found_list.append(", ".join(determiners_found))

original_data['is_determiner'] = is_determiner_list
original_data['determiners_found'] = determiners_found_list

# save
print(original_data[['entry_name', 'is_item', 'is_brand', 'is_ingredient', 'is_determiner', 'determiners_found']])
original_data.to_excel("updated_original_data.xlsx", index=False)

